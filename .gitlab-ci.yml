image: docker:stable

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME$CI_PIPELINE_ID
  APP_NAME: $CI_PROJECT_NAME-$CI_COMMIT_REF_NAME

stages:
  - deploy

include:
  - project: 'deploying/halfme/template'
    file: 'nodejs-docker-deploy.yml'

prodDeploy:
  extends: .nodejs-docker-deploy
  only:
    - master
  variables:
    SELF_PROJECT: "alpha-event"

uatDeploy:
  stage: deploy
  only:
    - uat
  image: ubuntu
  before_script:
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  # - ssh-keygen -R 23.99.103.136
  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  - echo "$SELF_KEY" | tr -d '\r' | ssh-add - > /dev/null

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  ## Optionally, if you will be using any Git commands, set the user name and
  ## and email.
  ##
  #- git config --global user.email "user@example.com"
  #- git config --global user.name "User name"
  script:
    - ssh -oStrictHostKeyChecking=no cicd@23.99.103.136 "cd $SELF_PROJECT && git pull && docker-compose build --build-arg  MODE=\'\:uat\'  --no-cache $SELF_PROJECT && docker-compose down && docker-compose up -d  "

